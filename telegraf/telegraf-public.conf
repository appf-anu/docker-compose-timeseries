[global_tags]

[agent]
  interval = "10s"
  round_interval = true
  metric_batch_size = 1000
  metric_buffer_limit = 1000000
  collection_jitter = "0s"
  flush_interval = "10s"
  flush_jitter = "1s"
  precision = ""
  debug = true
  omit_hostname = true

# Configuration for sending metrics to InfluxDB
[[outputs.influxdb]]
  urls = [ "$INFLUXDB_URL" ]
  database = "$INFLUXDB_DATABASE"
  password = "$INFLUXDB_PASSWORD"
  username = "$INFLUXDB_USER"
  skip_database_creation = true

[[processors.converter]]
  [processors.converter.fields]
    float = ["no2",
            "o3_1hr",
            "o3_4hr",
            "co",
            "pm10",
            "pm2_5",
            "aqi_co",
            "aqi_no2",
            "aqi_o3_1hr",
            "aqi_o3_4hr",
            "aqi_pm10",
            "aqi_pm2_5",
            "aqi_site"]


[[inputs.http]]
  name_override = "data.act.gov.au-aqi"
  interval = "30m"
  urls = [
    "https://www.data.act.gov.au/resource/94a5-zqnn.json?name=Civic&$ORDER=datetime%20DESC&$LIMIT=24",
    "https://www.data.act.gov.au/resource/94a5-zqnn.json?name=Florey&$ORDER=datetime%20DESC&$LIMIT=24",
    "https://www.data.act.gov.au/resource/94a5-zqnn.json?name=Monash&$ORDER=datetime%20DESC&$LIMIT=24"
  ]
  headers = {"X-App-Token" = "${DATAACTTOKEN}"}
  data_format = "json"
  tag_keys = ["name"]
  json_string_fields = ["no2",
            "o3_1hr",
            "o3_4hr",
            "co",
            "pm10",
            "pm2_5",
            "aqi_co",
            "aqi_no2",
            "aqi_o3_1hr",
            "aqi_o3_4hr",
            "aqi_pm10",
            "aqi_pm2_5",
            "aqi_site"]
  json_time_key = "datetime"
  json_time_format = "2006-01-02T15:04:05.999"
  # "2019-12-10T23:00:00.000"
  json_timezone = "Australia/Canberra"

[[processors.enum]]
  [[processors.enum.mapping]]
    ## Name of the field to map
    field = "wind_dir"

    ## Name of the tag to map
    # tag = "status"

    ## Destination tag or field to be used for the mapped value.  By default the
    ## source tag or field is used, overwriting the original value.
    dest = "wind_bearing"

    ## Default value to be used for all values not contained in the mapping
    ## table.  When unset and no match is found, the original field will remain 
    ## unmodified and the destination tag or field will not be created.
    # default = 0

    ## Table of mappings
    [processors.enum.mapping.value_mappings]
      N = 0.0
      NNE = 22.5
      NE = 45
      ENE = 67.5
      E = 90
      ESE = 112.5
      SE = 135
      SSE = 157.5
      S = 180
      SSW = 202.5
      SW = 225
      WSW = 247.5
      W = 270
      WNW = 292.5
      NW = 315
      NNW = 337.5
  

[[inputs.http]]
  name_override = "reg.bom.gov.au-weather"
  interval = "30m"
  urls = [
    "http://reg.bom.gov.au/fwo/IDN60903/IDN60903.94926.json"
  ]
  json_query = "observations.data"
  data_format = "json"
  tag_keys = ["name"]
  json_string_fields = ["cloud", "wind_dir"]
  json_time_key = "local_date_time_full"
  json_time_format = "20060102150405"
  # "20191208160400"

  json_timezone = "Australia/Canberra"


# [[inputs.openweathermap]]
#   ## OpenWeatherMap API key.
#   app_id = "${OPENWEATHERMAP_API_KEY}"

#   ## City ID's to collect weather data from.
#   city_id = ["${OPENWEATHERMAP_CITY_ID}"]

#   ## Language of the description field. Can be one of "ar", "bg",
#   ## "ca", "cz", "de", "el", "en", "fa", "fi", "fr", "gl", "hr", "hu",
#   ## "it", "ja", "kr", "la", "lt", "mk", "nl", "pl", "pt", "ro", "ru",
#   ## "se", "sk", "sl", "es", "tr", "ua", "vi", "zh_cn", "zh_tw"
#   lang = "en"

#   ## APIs to fetch; can contain "weather" or "forecast".
#   fetch = ["weather"]

#   ## OpenWeatherMap base URL
#   # base_url = "https://api.openweathermap.org/"

#   ## Timeout for HTTP response.
#   # response_timeout = "5s"

#   ## Preferred unit system for temperature and wind speed. Can be one of
#   ## "metric", "imperial", or "standard".
#   units = "metric"

#   ## Query interval; OpenWeatherMap weather data is updated every 10
#   ## minutes.
#   interval = "10m"
#   name_override = "openweathermap"